package com.promineotech.rudimentarybanking.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.promineotech.rudimentarybanking.requests.Action;
import com.promineotech.rudimentarybanking.requests.Transfer;
import com.promineotech.rudimentarybanking.service.AccountService;

@RestController
@RequestMapping("/users/{id}/accounts") 
public class UserAccountController {
	
	@Autowired
	private AccountService service;
	
	@RequestMapping(value="/{id}",method=RequestMethod.GET)
	public ResponseEntity<Object> showUserAccount(@PathVariable Long id) {
		try {
			return new ResponseEntity<Object>(service.getAccountById(id), HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<Object>(e.getMessage(), HttpStatus.NOT_FOUND);
		}
	}
	
	@RequestMapping(method=RequestMethod.GET)
	public ResponseEntity<Object> showAllUserAccounts(@PathVariable Long id) {
		try {
		return new ResponseEntity<Object>(service.getUserAccounts(id), HttpStatus.OK);
		} catch (Exception e){
			return new ResponseEntity<Object>(e.getMessage(), HttpStatus.NOT_FOUND);
		}
	}
	
	
	@RequestMapping(value="/{id}/action", method=RequestMethod.PUT)
	public ResponseEntity<Object> newAction(@RequestBody Action action) {
		try {
			return new ResponseEntity<Object>(service.changeBalance(action), HttpStatus.OK);
		} catch (Exception e ) {
			return new ResponseEntity<Object>(e.getMessage(), HttpStatus.NOT_FOUND);
		}
	}
	
	@RequestMapping(value="{id}/transfer", method=RequestMethod.PUT)
	public ResponseEntity<Object> newTransfer(@RequestBody Transfer transfer) {
		try {
			return new ResponseEntity<Object>(service.newTransfer(transfer), HttpStatus.OK);
		} catch (Exception e ) {
			return new ResponseEntity<Object>(e.getMessage(), HttpStatus.NOT_FOUND);
		}
	}

}
