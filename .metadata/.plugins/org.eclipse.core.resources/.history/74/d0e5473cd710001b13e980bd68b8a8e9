package com.promineotech.rudimentarybanking.controller;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.promineotech.rudimentarybanking.entites.Admin;
import com.promineotech.rudimentarybanking.entites.Credentials;
import com.promineotech.rudimentarybanking.service.AdminService;
import com.promineotech.rudimentarybanking.service.AuthenticationService;

@RestController
@RequestMapping("/admins")
public class AdminController {

	@Autowired
	private AdminService service;
	
	@Autowired
	private AuthenticationService authservice;
	
	@RequestMapping(value="/{id}", method=RequestMethod.GET)
	public ResponseEntity<Object> showAdmin(@PathVariable Long id) {
		try {
			return new ResponseEntity<Object>(service.getAdminById(id), HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<Object>(e.getMessage(), HttpStatus.NOT_FOUND);
		}
	}
	
	@RequestMapping(method=RequestMethod.GET)
	public ResponseEntity<Object> showAdmins() {
		return new ResponseEntity<Object>(service.getAdmins(), HttpStatus.OK);
	}

//	@RequestMapping(method=RequestMethod.POST)
//	public ResponseEntity<Object> createAdmin(@RequestBody Admin admin) {
//		return new ResponseEntity<Object>(service.createAdmin(admin), HttpStatus.CREATED);
//	}
	
	@RequestMapping(value = "/adminregister", method = RequestMethod.POST)
	public ResponseEntity<Object> adminRegister(@RequestBody Credentials cred, HttpServletRequest request) {
		try {
				return new ResponseEntity<Object>(authservice.register(cred, "ADMIN"), HttpStatus.CREATED);
		} catch (Exception e) {
			return new ResponseEntity<Object>(e.getMessage(), HttpStatus.BAD_REQUEST);
		}
	}
	
	@RequestMapping(value="/{id}", method=RequestMethod.PUT)
	public ResponseEntity<Object> updateAdmin(@RequestBody Admin admin, @PathVariable Long id) {
		try {
			return new ResponseEntity<Object>(service.updateAdminInfo(admin, id), HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<Object>(e.getMessage(), HttpStatus.NOT_FOUND);
		}
	}
	
	@RequestMapping(value="/{id}", method=RequestMethod.DELETE)
	public ResponseEntity<Object> deleteAdmin(@PathVariable Long id) {
		try {
			service.deleteAdmin(id);
			return new ResponseEntity<Object>("Successfully deleted admin with id: " + id, HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<Object>(e.getMessage(), HttpStatus.NOT_FOUND);
		}
	}
}

