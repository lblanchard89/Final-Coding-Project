package com.promineotech.rudimentarybanking.service;

import java.time.LocalDate;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.promineotech.rudimentarybanking.entites.Account;
import com.promineotech.rudimentarybanking.entites.Deposit;
import com.promineotech.rudimentarybanking.entites.User;
import com.promineotech.rudimentarybanking.entites.Withdraw;
import com.promineotech.rudimentarybanking.repository.AccountRepository;
import com.promineotech.rudimentarybanking.repository.UserRepository;
import com.promineotech.rudimentarybanking.repository.WithdrawRepository;
import com.promineotech.rudimentarybanking.util.DepositStatus;
import com.promineotech.rudimentarybanking.util.WithdrawStatus;

@Service
public class WithdrawService {

	private static final Logger logger = LogManager.getLogger(WithdrawService.class);
	
	@Autowired
	private WithdrawRepository repo;
	
	@Autowired
	private AccountRepository accountRepo;
	
	@Autowired
	private UserRepository userRepo;
	
	private Withdraw createWithdraw(Account accountId, User userId) {
		Withdraw withdraw = new Withdraw();
		withdraw.setUser(withdraw.getUser());
		withdraw.setAccount(withdraw.getAccount());
		withdraw.setId(withdraw.getId());
		withdraw.setAmount(withdraw.getAmount());
		withdraw.setDateWithdrawn(LocalDate.now());
		withdraw.setStatus(WithdrawStatus.PENDING);
		return repo.save(withdraw);
	}
}


// I need to set the an updated balance equal to he current balance minus the amount withdrawn
// I need to save the withdrawn amount, so that it can be transfered